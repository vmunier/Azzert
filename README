Un site intéressant qui ressemble beaucoup à ce que je veux faire : http://votes.io/

Réserver les noms de domaine vote.web et votes.web dès que les domaines en .web sortent.

La collection answer-history contient tout l'historique du nombre de votes d'une réponse.

On a fixé X=3
Lorsque des personnes votent une question, les données sont accumulées puis insérée toutes les X secondes dans mongodb.
Points importants :
_ les entrées de la collection answer-history sont déjà ordonnées par date.
_ deux entrées consécutives pour une même réponse ont au minimum X secondes d'intervale (plus de X secondes si il n'y a pas eu de votes sur une réponse pendant plus de X secs).


On rajoutera une vue pour consulter l'historique des votes d'une question.
Ça sera une vue fixe qui ne sera pas mis à jour dynamiquement.
L'acteur HistoryActor sauvegardera aussi l'historique dans Graphite et cette vue requêtera Graphite pour afficher le graphe d'historique.
La collection mongodb AnswerHistory aura un ttl sur ses entrées pour qu'elle ne grossisse pas trop.
C'est Graphite qui se chargera de stoker l'historique entier.
D'ailleurs Graphite fait un travaille de compactage automatique.
L'idée est qu'il garde seulement les 180 derniers jours de votes puis lorsque ça dépasse
il fait une moyenne et garde une métrique pour chaque mois. Je ne sais pas si c'est réelement 180 jours.

Exemple de requête à OpenTSDB :
http://localhost:4242/#start=2013/06/11-17:00:00&end=2013/06/11-17:36:31&m=avg:1s-avg:mytest2%7Banswer=*%7D&o=&yrange=%5B0:%5D&wxh=1420x594

Je devrais utiliser OpenTSDB 2.0 une fois qu'elle sera sortie (https://github.com/OpenTSDB/opentsdb/tree/next).
La version 1.0 d'OpenTSDB n'est quasiment plus mis à jour et certaines requêtes ne fonctionnent pas.
L'api de la 2.0 va changer continuellement, donc il vaut mieux attendre que ça se stabilise avant de l'utiliser.
La documentation de la 2.0 se trouve ici : http://opentsdb.net/docs/build/html/index.html .